server:
  port: 8000

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "*"
            allowed-methods: [GET, POST, PUT, DELETE, OPTIONS]
            allowed-headers: "*"

      routes:
        # ==================== ACCOUNT SERVICE ====================
        - id: account-service-accounts
          uri: lb://account-service
          predicates:
            - Path=/account/**
          filters:
            - RewritePath=/account/(?<segment>.*), /api/account/${segment}
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 10
#                redis-rate-limiter.burstCapacity: 20
#                key-resolver: "#{@ipKeyResolver}"

        - id: account-service-history-status
          uri: lb://account-service
          predicates:
            - Path=/account-history-status/**
          filters:
            - RewritePath=/account-history-status/(?<segment>.*), /api/account-history-status/${segment}
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 10
#                redis-rate-limiter.burstCapacity: 20
#                key-resolver: "#{@ipKeyResolver}"

        - id: account-service-limit
          uri: lb://account-service
          predicates:
            - Path=/account-limit/**
          filters:
            - RewritePath=/account-limit/(?<segment>.*), /api/account-limit/${segment}
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 10
#                redis-rate-limiter.burstCapacity: 20
#                key-resolver: "#{@ipKeyResolver}"

        # ==================== LEDGER SERVICE ====================
        - id: ledger-service-account
          uri: lb://ledger-service
          predicates:
            - Path=/ledger-account/**
          filters:
            - RewritePath=/ledger-account/(?<segment>.*), /api/ledger-account/${segment}
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 10
#                redis-rate-limiter.burstCapacity: 20
#                key-resolver: "#{@ipKeyResolver}"

        - id: ledger-service-entry
          uri: lb://ledger-service
          predicates:
            - Path=/ledger-entry/**
          filters:
            - RewritePath=/ledger-entry/(?<segment>.*), /api/ledger-entry/${segment}
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 10
#                redis-rate-limiter.burstCapacity: 20
#                key-resolver: "#{@ipKeyResolver}"

        # ==================== TRANSFER SERVICE ====================
        - id: transfer-service
          uri: lb://transfer-service
          predicates:
            - Path=/transfer/**
          filters:
            - RewritePath=/transfer/(?<segment>.*), /api/transfer/${segment}
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 10
#                redis-rate-limiter.burstCapacity: 20
#                key-resolver: "#{@ipKeyResolver}"

        # ==================== OTHER SERVICES ====================
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /api/auth/${segment}
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 3
#                redis-rate-limiter.burstCapacity: 5
#                key-resolver: "#{@ipKeyResolver}"



eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka

management:
  endpoints:
    web.exposure.include: health,info
  endpoint:
    health.show-details: always

jwt-secret: fcdddf3ec7f9cf18e1642a5b24239fc9c4ff7fed8fbeb53292ab97986141d023972fdae894b0b2a4